pipeline {
  agent {
    docker {
      image 'mrdrajesh/maven-abhishek-docker-agent:v2'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  stages {
    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
          userRemoteConfigs: [[url: 'https://github.com/mrdrajesh/jenkins-project2.git']],
          branches: [[name: '*/main']]
        ])
        sh 'echo "After Checkout:" && ls -la'
      }
    }

    stage('Build and Test') {
      steps {
        dir('jenkins-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://52.8.218.167:9000"
      }
      steps {
        dir('jenkins-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
              mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
            '''
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "mrdrajesh/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        dir('jenkins-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          script {
            sh "docker build -t ${DOCKER_IMAGE} ."
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "jenkins-project2"
        GIT_USER_NAME = "mrdrajesh"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          // Correct: working from root where .git exists
          sh '''
            echo "Current directory is:"
            pwd
            git config --global --add safe.directory /var/lib/jenkins/workspace/CI-Ppipeline

            git config user.email "rajeshkumar754204@gmail.com"
            git config user.name "Rajesh Behera"

            sed -i 's#replaceImageTag#'"${BUILD_NUMBER}"'#g' jenkins-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add jenkins-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
